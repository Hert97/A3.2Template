#version 450

layout (local_size_x = 256, local_size_y = 1) in;
layout (binding = 0, rgba8) uniform readonly image2D inputImage;

layout (binding = 1) buffer HistoEq
{
	uint histoBin[256];
    float cdf[256];
    uint sum;

} histoEq;

shared float scan[256];
void main()
{
   const uvec2 dim = imageSize(inputImage);
   const float prob =  1.0 / (dim.x * dim.y);
   uint tid = gl_LocalInvocationID.x;
   if(tid < 256)
       scan[tid] = histoEq.histoBin[tid];

   memoryBarrierShared();
   barrier();

    for (uint stride = 1; stride < gl_WorkGroupSize.x ; stride *= 2) 
    {
       if (gl_LocalInvocationID.x >= stride) 
       {	
           scan[gl_LocalInvocationID.x] += scan[gl_LocalInvocationID.x - stride];
       }
    }
    memoryBarrierShared();
    barrier();

    for(int i = 0 ; i<  256 ; ++i) 
    {
       histoEq.cdf[i] = scan[i];		 
    }	

//    
//    if(gl_LocalInvocationID.x < 256)
//        histoEq.cdf[gl_LocalInvocationID.x] = scan[gl_LocalInvocationID.x];		 
//    
//    float scanValue = gl_LocalInvocationID.x > 0 ? scan[gl_LocalInvocationID.x - 1] : 0.0;
//    if(gl_LocalInvocationID.x < 256)
//        histoEq.cdf[gl_LocalInvocationID.x] = scan[gl_LocalInvocationID.x] * prob + scanValue;


}
 	
 
 
 
